<?php

namespace app\models;

use yii\behaviors\TimestampBehavior;

/**
 * This is the model class for table "{{%place}}".
 *
 * @property integer id
 * @property string name
 * @property string description
 * @property integer category_id
 * @property integer status
 * @property double lat
 * @property double lon
 * @property string address
 * @property string created_ip
 * @property string created_at
 * @property string updated_at
 */

class Place extends \yii\db\ActiveRecord
{
    public $category;

    const STATUS_NO_MODERATE = 0;
    const STATUS_MODERATE = 1;

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%place}}';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['name', 'category_id', 'lat', 'lon'], 'required'],
            [['lat', 'lon', 'category_id', 'status'], 'number'],
            [['name', 'address'], 'string', 'max' => 255],
            [['description'], 'string'],
            [['category'], 'string'],

        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'name' => 'Название',
            'category_id' => 'Категория',
            'lat' => 'Координаты',
            'lon' => 'Координаты',
            'address' => 'Адрес',
            'description' => 'Описание',
            'created_ip' => 'ip создателя',
            'status' => 'Статус',
        ];
    }

    public function beforeSave($insert)
    {
        if ($insert) {
            $this->created_ip = $_SERVER['REMOTE_ADDR'];
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public static function findByCategoryId($category_id) {
        $category_id = (int)$category_id;
        return self::find()->andWhere(['category_id' => $category_id]);
    }

    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::className(),
                //'updatedAtAttribute' => false
            ]
        ];
    }

}
