<?php

namespace app\modules\admin\controllers;

use app\components\Helper;
use app\constants\ImageConstants;
use app\constants\UserConstants;
use app\models\Gallery;
use app\models\Image;
use app\models\Schedule;
use app\models\traits\ImageUploaderController;
use app\modules\admin\components\actions\DeleteAction;
use app\modules\admin\components\actions\SoftDeleteAction;
use app\modules\admin\models\search\GallerySearch;
use Yii;
use app\models\User;

/**
 * UsersController implements the CRUD actions for User model.
 */
class GalleryController extends BaseController
{
    use ImageUploaderController;

    public function getScenario()
    {
        return ImageConstants::SCENARIO['GALLERY'];
    }

    protected function getClassName()
    {
        return Gallery::className(); // TODO: Change the autogenerated stub
    }

    public function behaviors()
    {
        $rules = parent::behaviors();
        $rules['access']['rules'][] = [
            'actions' => ['upload-image'],
            'allow' => true,
            'roles' => ['?'],
        ];

        $rules['access']['rules'][] = [
            'actions' => ['soft-delete'],
            'allow' => true,
            'roles' => [UserConstants::ROLE['ADMIN']],
            'className' =>  Gallery::className(),
        ];

        return $rules;
    }


    public function actionIndex($place_id)
    {
        $searchModel = new GallerySearch();
        $params = Yii::$app->request->queryParams;
        $params['GallerySearch']['place_id'] = $place_id;

        $dataProvider = $searchModel->search($params);

        return $this->render('index', [
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider,
            'isCanAdd' => Gallery::isCanAddMore($place_id)
        ]);
    }

    public function actionCreate($place_id)
    {
        $model = new Gallery();
        $this->isCanAddMore($place_id);
        $model->place_id = (int)$place_id;

        if ($model->load(Yii::$app->request->post()) && $model->save()) {
            $model->uploadNewImageByUrl(Yii::$app->request->post('images'), ImageConstants::TYPE['GALLERY']);
            return $this->redirect(['index', 'place_id' => $model->place_id]);
        } else {
            return $this->render('create', [
                'model' => $model,
            ]);
        }
    }

    public function actionUpdate($id)
    {
        $model = Gallery::findOneModel($id);
        $this->isCanAddMore($model->place_id);

        if ($post = Yii::$app->request->post()) {
            /** @var Gallery $newGallery */
            $newGallery = $model->getDuplicate();
            if ($newGallery->load(Yii::$app->request->post()) && $newGallery->save()) {
                $newGallery->uploadNewImageByUrl(
                    array_merge(explode(',',$post['old_images']),explode(',',$post['images'])),
                    ImageConstants::TYPE['GALLERY']);
                Helper::setMessage('Изменения сохранены, ожидают проверки', Helper::TYPE_MESSAGE_SUCCESS);
                return $this->redirect(['index', 'place_id' => $newGallery->place_id]);
            }
        }

        return $this->render('update', [
            'model' => $model,
        ]);

    }
}